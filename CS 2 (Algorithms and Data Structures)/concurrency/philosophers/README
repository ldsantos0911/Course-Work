The algorithm goes as follows. The given philosopher attempts to first pick up
the left fork, then the right. Then, the philosopher eats. Finally, the philosopher
releases the right fork, then the left. This will always deadlock, for each
philosopher will attempt to pick up the fork on the left at roughly the same time.
Then, no philosopher will be able to pick up the right fork, and no philosopher will
release their fork. Thus, no philosopher will ever be able to progress beyond their
attempt to pick up the right fork.

Given n total philosophers (and therefore n forks), n - 1 can sit at the table
and eat. Since each philosopher attempts to grab both forks, there needs to be
at least one more fork than philosophers eating, in order to guarantee that one
philosopher will be able to grab both forks and successfully eat. Otherwise, the
program will deadlock.


TalkingPhilosopher

If everybody starts off with a dirty, left fork, each philosopher will request
the fork to their right, resulting in everybody having a clean right fork. Then,
each philosopher would request the left fork, but no one would release it as it
would be clean, so the program would reach deadlock.
